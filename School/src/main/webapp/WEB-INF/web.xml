<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_4_0.xsd" version="4.0" >
  <display-name>SSM</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- 指定Spring容器集成并管理MyBatis所需要加载的MyBatis配置文件spring-mybatis.xml -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring/spring-mybatis.xml</param-value>
  </context-param>
  
  <!-- 加载Spring容器:Spring监听器 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- 配置编码过滤器 -->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- 配置前端控制器DispatcherServlet: org.springframework.web.servlet.DispatcherServlet -->
  <servlet>
    <servlet-name>DispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
    <!--
      DispatcherServlet的启动参数contextConfigLocation用于指定当前应用的SpringMVC全局配置文件位置;
      DispatcherServlet会依据参数contextConfigLocation指定的位置来加载当前应用的全局SpringMVC配置数据;
      如果不配置参数contextConfigLocation,则默认加载的全局SpringMVC配置文件是"/WEB-INF/<servlet-name>-servlet.xml";
      在本例中就是"/WEB-INF/springmvc-servlet.xml"
      方法1: 不写,默认使用"/WEB-INF/<servlet-name>-servlet.xml";
      方法2: 指定任意位置"/WEB-INF/<app-name>-springmvc.xml";
      方法3: CLASSPATH指定"classpath:<app-name>-springmvc.xml";
      方法4: 多个配置文件之间使用逗号","隔开;
    -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/spring-mvc.xml</param-value>
    </init-param>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>DispatcherServlet</servlet-name>
    <!--
        URL映射规则:
        第一种配置: "*.do",还可以写成"*.action",表示以".do"或".action"结尾的来访URL都由前端控制器DispatcherServlet来解析处理;
        第二种配置: "/",表示所有来访的URL都由前端控制器DispatcherServlet来解析处理,但这里最好配置静态文件不需要由
                  前端控制器DispatcherServlet来处理;
        错误配置 : "/*",不能这样配置,因为如果这样配置的话,最后转发到JSP页面的时候,仍然会由前端控制器DispatcherServlet进行
                  解析处理,而这时会因为找不到对应的Handler而报错：
    -->
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>
</web-app>