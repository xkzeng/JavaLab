<?xml version="1.0" encoding="UTF-8"?>
<beans
  xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
  xmlns = "http://www.springframework.org/schema/beans"
  xmlns:mvc ="http://www.springframework.org/schema/mvc"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation = "http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd"
>

<!--
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xsi:schemaLocation =
                       http://www.springframework.org/schema/aop
                       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
                       http://www.springframework.org/schema/tx
                       http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
-->
    
    <!-- STEP1: 自动配置基于注解的处理器映射器组件和处理器适配器组件(只配置,不开发);
         默认自动使用RequestMappingHandlerMapping类充当映射器;
         默认自动使用RequestMappingHandlerAdapter类充当适配器;
         如果要使用标签<mvc:annotation-driven>,则需要在文件头部的<beans>标签中指定"xmlns:mvc",
         并在xsi:schemaLocation中指定spring-mvc的版本信息;
    -->
    <mvc:annotation-driven></mvc:annotation-driven>
    
    <!-- STEP2: 自动配置处理器控制器(需开发);
         控制器是开发者自己实现的,用于实现HTTP请求的业务逻辑控制;
         自动配置就是自动扫描Controller、Service、Resource、Component等注解所修饰的类所在的包下面的全部类;
         如果要使用标签<context:component-scan>,则需要在文件头部的<beans>标签中指定"xmlns:context",
         并在xsi:schemaLocation中指定spring-context的版本信息;
    -->
    <context:component-scan base-package="com.learn.mybatis.controller"></context:component-scan>
    
    
    <!-- STEP3: 配置动态视图解析器组件(只配置,不开发)
         此处配置使用Velocity作为视图渲染组件;
    -->
    <!-- Velocity运行环境配置 -->
    <bean id = "velocityConfig" class = "org.springframework.web.servlet.view.velocity.VelocityConfigurer">
       <!-- Velocity模板文件路径 -->
       <property name="resourceLoaderPath" value = "/WEB-INF/" />
       <!-- Velocity配置文件路径 -->
       <property name="configLocation" value = "classpath:properties/velocity.properties" />
    </bean>
    
    <!-- Velocity视图解析器 -->
    <bean id = "velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
       <!-- 返回视图页面的前缀 -->
       <property name="prefix" value="view/"></property> <!-- 最终的页面路径是"resourceLoaderPath的值+prefix的值" -->
       <!-- 返回视图页面的后缀 -->
       <property name="suffix" value=".vm"></property>
       <property name="contentType" value = "text/html;charset=UTF-8"></property>
    </bean>
</beans>